# 环境变量配置模板
# 复制此文件为 .env 并填入实际的配置值

# ================================
# 基础环境配置
# ================================
NODE_ENV=development
PORT=3000
API_PORT=4000

# ================================
# 数据库配置
# ================================
# PostgreSQL 连接字符串
DATABASE_URL="postgresql://postgres:postgres123@localhost:5432/study_assistant"

# 数据库连接池配置
DB_POOL_MIN=2
DB_POOL_MAX=10

# ================================
# Redis 配置
# ================================
# Redis 连接字符串
REDIS_URL="redis://localhost:6379"

# Redis 连接池配置
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=1000

# ================================
# 文件存储配置
# ================================
# 存储类型: local | s3 | minio
STORAGE_TYPE=minio

# MinIO/S3 配置
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin123
MINIO_BUCKET_NAME=study-assistant
MINIO_USE_SSL=false

# AWS S3 配置 (如果使用 S3)
# AWS_REGION=us-west-2
# AWS_ACCESS_KEY_ID=your_access_key
# AWS_SECRET_ACCESS_KEY=your_secret_key
# S3_BUCKET_NAME=study-assistant-prod

# ================================
# AI 服务配置  
# ================================
# OpenAI API 配置
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_MODEL_CHAT=gpt-4
OPENAI_MODEL_EMBEDDING=text-embedding-ada-002

# Anthropic Claude 配置 (可选)
# ANTHROPIC_API_KEY=your-claude-api-key

# 本地 LLM 配置 (可选)
# LOCAL_LLM_ENDPOINT=http://localhost:11434
# LOCAL_LLM_MODEL=llama2

# ================================
# 认证配置
# ================================
# NextAuth.js 配置
NEXTAUTH_SECRET=your-super-secret-key-here-change-in-production
NEXTAUTH_URL=http://localhost:3000

# JWT 配置
JWT_SECRET=your-jwt-secret-key-change-in-production
JWT_EXPIRES_IN=7d

# ================================
# OAuth 提供者配置
# ================================
# Google OAuth
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# GitHub OAuth
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# ================================
# 队列和任务配置
# ================================
# BullMQ 配置
QUEUE_CONCURRENCY=5
QUEUE_MAX_ATTEMPTS=3
QUEUE_BACKOFF_TYPE=exponential
QUEUE_BACKOFF_DELAY=5000

# 任务超时配置 (毫秒)
TASK_TIMEOUT_INGEST=300000     # 5分钟
TASK_TIMEOUT_GENERATE=180000   # 3分钟
TASK_TIMEOUT_GRADE=120000      # 2分钟

# ================================
# 安全配置
# ================================
# CORS 允许的域名
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# 速率限制配置
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_WINDOW_MS=900000    # 15分钟

# 文件上传限制
MAX_FILE_SIZE=50mb             # 最大文件大小
ALLOWED_FILE_TYPES=pdf,pptx,txt,docx

# ================================
# 监控和日志配置
# ================================
# 日志级别: debug | info | warn | error
LOG_LEVEL=info

# Sentry 错误追踪 (可选)
# SENTRY_DSN=https://your-sentry-dsn-here

# Prometheus 监控端口
METRICS_PORT=9090

# ================================  
# OCR 服务配置
# ================================
# OCR 服务地址
OCR_SERVICE_URL=http://localhost:8000

# OCR 引擎选择: tesseract | paddleocr | both
OCR_ENGINE=paddleocr

# OCR 语言配置
OCR_LANGUAGES=chi_sim,chi_tra,eng

# OCR 质量阈值 (0-1)
OCR_CONFIDENCE_THRESHOLD=0.7

# ================================
# 缓存配置
# ================================
# 缓存策略配置
CACHE_TTL_SHORT=300       # 5分钟
CACHE_TTL_MEDIUM=3600     # 1小时  
CACHE_TTL_LONG=86400      # 1天

# 预热缓存
ENABLE_CACHE_WARMUP=true

# ================================
# 业务逻辑配置
# ================================
# 内容生成配置
MAX_TOKENS_PER_REQUEST=4000
MAX_SEGMENTS_PER_SELECTION=50
DEFAULT_LANGUAGE=zh

# 考试配置
MAX_EXAM_QUESTIONS=50
DEFAULT_EXAM_TIME_LIMIT=120    # 分钟
ENABLE_EXAM_SHUFFLE=true

# 用户配额配置
USER_DAILY_TOKEN_LIMIT=10000
USER_MONTHLY_UPLOAD_LIMIT=100

# ================================
# 开发和调试配置
# ================================
# 开发模式配置
ENABLE_DEV_TOOLS=true
ENABLE_QUERY_LOGGING=false
ENABLE_MOCK_AI=false

# 调试配置
DEBUG_ROUTES=false
DEBUG_QUERIES=false
DEBUG_WORKERS=false